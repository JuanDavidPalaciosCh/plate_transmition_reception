options:
  parameters:
    author: fabian
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: ModulacionPlaca
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 100e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: analog_const_source_x_0
  id: analog_const_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [424, 260.0]
    rotation: 0
    state: true
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: 433e2
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    showports: 'False'
    type: float
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 20.0]
    rotation: 0
    state: true
- name: analog_sig_source_x_0_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: 433e6
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: 1e9
    showports: 'False'
    type: float
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 572.0]
    rotation: 0
    state: true
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1056, 176.0]
    rotation: 0
    state: true
- name: blocks_complex_to_float_0
  id: blocks_complex_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 496.0]
    rotation: 0
    state: true
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '59'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    showports: 'False'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1104, 372.0]
    rotation: 0
    state: enabled
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 496.0]
    rotation: 0
    state: true
- name: blocks_float_to_uchar_0
  id: blocks_float_to_uchar
  parameters:
    affinity: ''
    alias: ''
    bias: '0'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1616, 496.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '-1'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 244.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '5'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [944, 492.0]
    rotation: 0
    state: true
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 152.0]
    rotation: 0
    state: true
- name: blocks_multiply_xx_0_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 480.0]
    rotation: 0
    state: true
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: '15'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 180.0]
    rotation: 0
    state: true
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 172.0]
    rotation: 0
    state: enabled
- name: blocks_uchar_to_float_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1400, 392.0]
    rotation: 0
    state: enabled
- name: blocks_uchar_to_float_1
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [712, 248.0]
    rotation: 0
    state: true
- name: blocks_uchar_to_float_1_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [712, 184.0]
    rotation: 0
    state: true
- name: blocks_uchar_to_float_2
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1264, 496.0]
    rotation: 0
    state: true
- name: blocks_xor_xx_0
  id: blocks_xor_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 232.0]
    rotation: 0
    state: true
- name: blocks_xor_xx_1
  id: blocks_xor_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1280, 376.0]
    rotation: 0
    state: enabled
- name: digital_binary_slicer_fb_0
  id: digital_binary_slicer_fb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1112, 496.0]
    rotation: 0
    state: true
- name: epy_block_0_0
  id: epy_block
  parameters:
    _source_code: "############################################################\n\
      #   csv_bits_src.py  \u2013  con ID del auto in\u2011band + tag       #\n############################################################\n\
      import csv, ast, numpy as np, pmt\nfrom gnuradio import gr\n\nclass csv_bits_src(gr.basic_block):\n\
      \n    def __init__(self,\n                 csv_path=\"/home/jpalaciosch/Documents/UNAL/Septimo\
      \ semestre/Comunicaciones/Proyecto final/dataset_yolo/dataset_yolo.csv\",\n\
      \                 repeats=10):\n\n        # ---- par\xE1metros generales ----\n\
      \        self.repeats = int(repeats)\n        self.header  = np.array([1,1,1,0,1,0,1,0,1],\
      \ dtype=np.uint8)\n\n        # ---- cargar CSV -------------------------------------------------\n\
      \        self.bits_list = []   # [(id, bits), ...]\n        with open(csv_path,\
      \ newline=\"\") as f:\n            rdr = csv.DictReader(f)\n            for\
      \ row in rdr:\n                bits = np.array(ast.literal_eval(row[\"bits\"\
      ]), dtype=np.uint8)\n                if bits.size != 2000:\n               \
      \     print(f\"\u26A0\uFE0F  fila {row['num_auto']} tama\xF1o {bits.size}\"\
      )\n                    continue\n                car_id = int(row[\"num_auto\"\
      ])  # 1..182\n                if not (0 < car_id < 256):\n                 \
      \   print(f\"\u26A0\uFE0F  ID {car_id} fuera de rango 1\u2011255\")\n      \
      \              continue\n                self.bits_list.append((car_id, bits))\n\
      \n        if not self.bits_list:\n            raise RuntimeError(\"CSV sin bit\u2011\
      arrays v\xE1lidos.\")\n\n        # ---- estado interno --------------------------------------------\n\
      \        self.row_idx     = 0\n        self.repeat_left = self.repeats\n   \
      \     self._build_payload()\n\n        gr.basic_block.__init__(self, name=\"\
      csv_bits_src\",\n                                in_sig=None, out_sig=[np.uint8])\n\
      \n    # ------------------------------------------------------------------ #\n\
      \    def _build_payload(self):\n        car_id, bits = self.bits_list[self.row_idx]\n\
      \n        # 1 byte con el ID (uint8)\n        id_byte   = np.array([car_id],\
      \ dtype=np.uint8).view(np.uint8)\n        # convertir byte\u2192bits (8\_bits\
      \ MSB primero)\n        id_bits   = np.unpackbits(id_byte)\n\n        self.payload\
      \    = np.concatenate((self.header, id_bits, bits))\n        self.packet_len\
      \ = len(self.payload)\n        self.cur_id     = car_id  # guarda para etiquetar\n\
      \n    def _next_row(self):\n        self.row_idx += 1\n        if self.row_idx\
      \ >= len(self.bits_list):\n            return False\n        self.repeat_left\
      \ = self.repeats\n        self._build_payload()\n        return True\n\n   \
      \ # ------------------------------------------------------------------ #\n \
      \   def general_work(self, in_items, out_items):\n        out = out_items[0]\n\
      \        if len(out) < self.packet_len:\n            return 0\n\n        out[:self.packet_len]\
      \ = self.payload\n\n        # tag con longitud y con ID (opcional pero \xFA\
      til)\n        offset = self.nitems_written(0)\n        self.add_item_tag(0,\
      \ offset,\n                          pmt.intern(\"packet_len\"),\n         \
      \                 pmt.from_long(self.packet_len))\n        self.add_item_tag(0,\
      \ offset,\n                          pmt.intern(\"car_id\"),\n             \
      \             pmt.from_long(self.cur_id))\n\n        # mensaje de progreso\n\
      \        rep_idx = self.repeats - self.repeat_left + 1\n        print(f\"Auto\
      \ {self.cur_id:03d}  r\xE9plica {rep_idx}\")\n\n        # administraci\xF3n\
      \ de repeticiones\n        self.repeat_left -= 1\n        if self.repeat_left\
      \ == 0:\n            if not self._next_row():\n                return -1\n \
      \       return self.packet_len\n\n"
    affinity: ''
    alias: ''
    comment: ''
    csv_path: '"/home/jpalaciosch/Documents/UNAL/Septimo semestre/Comunicaciones/Proyecto
      final/dataset_yolo/dataset_yolo.csv"'
    maxoutbuf: '0'
    minoutbuf: '0'
    repeats: '2'
  states:
    _io_cache: ('csv_bits_src', 'csv_bits_src', [('csv_path', "'/home/jpalaciosch/Documents/UNAL/Septimo
      semestre/Comunicaciones/Proyecto final/dataset_yolo/dataset_yolo.csv'"), ('repeats',
      '10')], [], [('0', 'byte', 1)], '', ['repeats'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 204.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "#############################################################\n\
      # bits2img_id_csv \u2013 RX con dataset y CSV                    #\n#############################################################\n\
      \nimport cv2, csv, numpy as np\nfrom pathlib import Path\nfrom gnuradio import\
      \ gr\n\nclass bits2img_id_csv(gr.basic_block):\n    def __init__(self,\n   \
      \              width=50,\n                 height=40,\n                 out_root=\"\
      ./dataset_rx_yolo\",\n                 show=True):\n\n        super().__init__(name=\"\
      bits2img_id_csv\",\n                         in_sig=[np.uint8],\n          \
      \               out_sig=None)\n\n        # --- imagen / cabecera ---\n     \
      \   self.w = int(width)\n        self.h = int(height)\n        self.expected\
      \ = self.w * self.h\n        self.header   = np.array([1,1,1,0,1,0,1,0,1], dtype=np.uint8)\n\
      \        self.id_len   = 8\n        self.buffer   = np.empty(0, dtype=np.uint8)\n\
      \        self.show     = bool(show)\n\n        # --- dataset en disco -----\n\
      \        self.root     = Path(out_root)\n        self.dir_img  = self.root /\
      \ \"autos_bw\"\n        self.dir_bits = self.root / \"autos_bits\"\n       \
      \ self.csv_path = self.root / \"dataset_rx.csv\"\n\n        for d in (self.dir_img,\
      \ self.dir_bits):\n            d.mkdir(parents=True, exist_ok=True)\n      \
      \  if not self.csv_path.exists():\n            with self.csv_path.open(\"w\"\
      , newline=\"\") as f:\n                csv.writer(f).writerow([\"num_auto\"\
      , \"bw_plate\", \"bits\"])\n\n        # --- contadores de r\xE9plica por auto\
      \ ---\n        self.rep_count = {}   # {id: next_rep_no}\n\n    # -----------------------------------------------------------\
      \ #\n    def _save_record(self, car_id: int, img_bw: np.ndarray, bits: np.ndarray):\n\
      \        # siguiente r\xE9plica #\n        rep_no = self.rep_count.get(car_id,\
      \ 1)\n        self.rep_count[car_id] = rep_no + 1\n\n        stem = f\"auto{car_id:03d}_rep{rep_no:02d}\"\
      \n        img_path  = self.dir_img  / f\"{stem}.png\"\n        bits_path = self.dir_bits\
      \ / f\"{stem}.npy\"\n\n        cv2.imwrite(str(img_path), img_bw)\n        np.save(bits_path,\
      \ bits.astype(np.uint8))\n\n        # guardar CSV\n        with self.csv_path.open(\"\
      a\", newline=\"\") as f:\n            csv.writer(f).writerow([car_id, str(img_path),\
      \ bits.tolist()])\n\n        print(f\"\U0001F4C1 Guardado {stem}\")\n\n    #\
      \ ----------------------------------------------------------- #\n    def general_work(self,\
      \ in_items, out_items):\n        data = in_items[0]\n        if len(data) ==\
      \ 0:\n            return 0\n        self.buffer = np.append(self.buffer, data)\n\
      \n        pkt_len = len(self.header) + self.id_len + self.expected\n       \
      \ while True:\n            lim = len(self.buffer) - pkt_len\n            if\
      \ lim < 0:\n                break\n\n            sync_found = False\n      \
      \      for i in range(lim + 1):\n                if np.array_equal(self.buffer[i:i+len(self.header)],\
      \ self.header):\n                    # zonas\n                    start_id \
      \ = i + len(self.header)\n                    start_img = start_id + self.id_len\n\
      \                    end_img   = start_img + self.expected\n               \
      \     if len(self.buffer) < end_img:\n                        break  # espera\
      \ m\xE1s bits\n                    # --- ID ---\n                    id_bits\
      \ = self.buffer[start_id:start_id+self.id_len]\n                    car_id \
      \ = np.packbits(id_bits)[0]\n                    # --- placa bits ---\n    \
      \                plate_bits = self.buffer[start_img:end_img]\n             \
      \       self.buffer = self.buffer[end_img:]  # descartar procesado\n       \
      \             sync_found = True\n\n                    # reconstruir imagen\
      \ (1=blanco)\n                    img_bw = (1 - plate_bits).astype(np.uint8).reshape(self.h,\
      \ self.w) * 255\n\n                    if self.show:\n                     \
      \   disp = img_bw.copy()\n                        cv2.putText(disp, f\"Auto\
      \ {car_id:03d}\", (2, 14),\n                                    cv2.FONT_HERSHEY_SIMPLEX,\
      \ 0.4, 255, 1, cv2.LINE_AA)\n                        cv2.imshow(\"Placa RX\"\
      , disp)\n                        cv2.waitKey(1)\n\n                    # ---\
      \ guardar en dataset / CSV\n                    self._save_record(car_id, img_bw,\
      \ plate_bits)\n\n                    break\n            if not sync_found:\n\
      \                # limitar tama\xF1o de buffer\n                if len(self.buffer)\
      \ > 10 * pkt_len:\n                    self.buffer = self.buffer[-10*pkt_len:]\n\
      \                break\n\n        self.consume(0, len(data))\n        return\
      \ 0\n\n"
    affinity: ''
    alias: ''
    comment: ''
    height: '40'
    maxoutbuf: '0'
    minoutbuf: '0'
    out_root: '"./dataset_rx_yolo"'
    show: 'True'
    width: '50'
  states:
    _io_cache: ('bits2img_id_csv', 'bits2img_id_csv', [('width', '50'), ('height',
      '40'), ('out_root', "'./dataset_rx_yolo'"), ('show', 'True')], [('0', 'byte',
      1)], [], '', ['show'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1808, 484.0]
    rotation: 0
    state: true
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: 8e3
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: 2e3
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 460.0]
    rotation: 0
    state: true
- name: qtgui_sink_x_0
  id: qtgui_sink_x
  parameters:
    affinity: ''
    alias: ''
    bw: samp_rate
    comment: ''
    fc: '0'
    fftsize: '1024'
    gui_hint: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    plotconst: 'True'
    plotfreq: 'True'
    plottime: 'True'
    plotwaterfall: 'True'
    rate: '10'
    showports: 'False'
    showrf: 'False'
    type: float
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1424, 60.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Error"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1560, 364.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_5
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"FINAL"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1424, 596.0]
    rotation: 0
    state: true
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '15'
    fbw: '0'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[]'
    type: fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1432, 468.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: placa
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1440, 268.0]
    rotation: 0
    state: true
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: throttle
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [592, 124.0]
    rotation: 0
    state: enabled
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: placa
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [40, 476.0]
    rotation: 0
    state: true
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: throttle
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [952, 372.0]
    rotation: 0
    state: enabled

connections:
- [analog_const_source_x_0, '0', blocks_xor_xx_0, '1']
- [analog_sig_source_x_0, '0', blocks_multiply_xx_0, '0']
- [analog_sig_source_x_0_0, '0', blocks_multiply_xx_0_0, '1']
- [blocks_add_xx_0, '0', blocks_multiply_xx_0, '1']
- [blocks_complex_to_float_0, '0', blocks_multiply_const_vxx_0_0, '0']
- [blocks_delay_0, '0', blocks_xor_xx_1, '0']
- [blocks_float_to_complex_0, '0', low_pass_filter_0, '0']
- [blocks_float_to_uchar_0, '0', epy_block_1, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_add_xx_0, '1']
- [blocks_multiply_const_vxx_0_0, '0', digital_binary_slicer_fb_0, '0']
- [blocks_multiply_xx_0, '0', qtgui_sink_x_0, '0']
- [blocks_multiply_xx_0, '0', virtual_sink_0, '0']
- [blocks_multiply_xx_0_0, '0', blocks_float_to_complex_0, '0']
- [blocks_repeat_0, '0', blocks_throttle2_0, '0']
- [blocks_throttle2_0, '0', blocks_uchar_to_float_1_0, '0']
- [blocks_throttle2_0, '0', blocks_xor_xx_0, '0']
- [blocks_throttle2_0, '0', virtual_sink_1, '0']
- [blocks_uchar_to_float_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_uchar_to_float_1, '0', blocks_multiply_const_vxx_0, '0']
- [blocks_uchar_to_float_1_0, '0', blocks_add_xx_0, '0']
- [blocks_uchar_to_float_2, '0', qtgui_time_sink_x_5, '0']
- [blocks_uchar_to_float_2, '0', rational_resampler_xxx_0, '0']
- [blocks_xor_xx_0, '0', blocks_uchar_to_float_1, '0']
- [blocks_xor_xx_1, '0', blocks_uchar_to_float_0, '0']
- [digital_binary_slicer_fb_0, '0', blocks_uchar_to_float_2, '0']
- [digital_binary_slicer_fb_0, '0', blocks_xor_xx_1, '1']
- [epy_block_0_0, '0', blocks_repeat_0, '0']
- [low_pass_filter_0, '0', blocks_complex_to_float_0, '0']
- [rational_resampler_xxx_0, '0', blocks_float_to_uchar_0, '0']
- [virtual_source_0, '0', blocks_multiply_xx_0_0, '0']
- [virtual_source_1, '0', blocks_delay_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.12.0
